# Copyright 2020-2021 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Vineyard Docs


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    environment: github-actions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Dependencies for Linux
        if: runner.os == 'Linux'
        run: |
          # leverage ccache
          export PATH=/usr/lib/ccache:$PATH

          sudo apt update -y
          sudo apt install -y ca-certificates \
                              ccache \
                              cmake \
                              doxygen \
                              libboost-all-dev \
                              libcurl4-openssl-dev \
                              libgflags-dev \
                              libgoogle-glog-dev \
                              libgmock-dev \
                              libgrpc-dev \
                              libgrpc++-dev \
                              libgtest-dev \
                              libkrb5-dev \
                              libmpich-dev \
                              libprotobuf-dev \
                              librdkafka-dev \
                              libgsasl7-dev \
                              librdkafka-dev \
                              libssl-dev \
                              libunwind-dev \
                              libxml2-dev \
                              libz-dev \
                              lsb-release \
                              protobuf-compiler-grpc \
                              python3-pip \
                              uuid-dev \
                              wget

          # install apache-arrow
          wget https://apache.bintray.com/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-archive-keyring-latest-$(lsb_release --codename --short).deb
          sudo apt install -y -V ./apache-arrow-archive-keyring-latest-$(lsb_release --codename --short).deb
          sudo apt update
          sudo apt install -y libarrow-dev=3.0.0-1 libarrow-python-dev=3.0.0-1

          # install python packages for codegen, and io adaptors
          sudo pip3 install libclang parsec pyarrow yapf==0.30.0 \
               sphinx sphinx_rtd_theme docutils==0.16 breathe gcovr pytest hdfs3 \
               numpy pandas pickle5 setuptools sortedcontainers

      - name: Install libgrape-lite
        if: runner.os == 'Linux'
        run: |
          # leverage ccache
          export PATH=/usr/lib/ccache:$PATH

          git clone https://github.com/alibaba/libgrape-lite.git
          cd libgrape-lite
          mkdir build
          cd build
          cmake ..
          make -j`nproc`
          sudo make install

      - name: CMake
        run: |
          # leverage ccache
          export PATH=/usr/lib/ccache:$PATH

          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug \
                   -DBUILD_SHARED_LIBS=ON \
                   -DBUILD_VINEYARD_COVERAGE=ON \
                   -DBUILD_VINEYARD_PYTHON_BINDINGS=ON \
                   -DBUILD_VINEYARD_BASIC=ON \
                   -DBUILD_VINEYARD_GRAPH=ON \
                   -DBUILD_VINEYARD_IO=ON \
                   -DBUILD_VINEYARD_IO_KAFKA=ON \
                   -DBUILD_VINEYARD_MIGRATION=ON \
                   -DBUILD_VINEYARD_TESTS=ON

      - name: Code generation
        run: |
          # leverage ccache
          export PATH=/usr/lib/ccache:$PATH

          pushd build
          make vineyard_basic_gen -j
          make vineyard_client_python -j

      - name: Generate Doc
        run: |
          cd build
          make vineyard_doc

      - name: Commit Doc
        if: ${{ github.ref == 'refs/heads/main' && github.repository == 'v6d-io/v6d' }}
        run: |
          git config user.email github-actions@github.com
          git config user.name github-actions
          git branch -D gh-pages || true
          git checkout --orphan gh-pages
          shopt -s extglob
          rm -rf !(docs)
          rm -rf .github .clang-format .gitattributes .gitmodules .gitignore
          mv docs/_build/html/* ./
          mv docs/_build/html/.nojekyll ./
          rm -rf docs
          git add -A
          git commit -m "Generate latest docs on CI, from commit ${{ github.sha }}."
          git push -f origin gh-pages
